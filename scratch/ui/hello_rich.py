# Generated by Claude Sonnet 4
from textual.app import App, ComposeResult
from textual.widgets import Static
from textual.reactive import reactive
from rich.panel import Panel
from rich.text import Text
import subprocess

OPTIONS = [
    ("查看当前目录", "ls"),
    ("显示当前用户", "whoami"),
    ("显示系统时间", "date"),
]

class Menu(Static):
    selected = reactive(0)

    def render(self):
        items = []
        for idx, (label, _) in enumerate(OPTIONS):
            prefix = "👉 " if idx == self.selected else "   "
            style = "bold yellow" if idx == self.selected else None
            text = Text(prefix + label, style=style)
            items.append(text)
        return Panel(Text("\n").join(items), title="选择一个操作（上下键切换，回车执行）")

class MyApp(App):
    def compose(self) -> ComposeResult:
        yield Menu()
        yield Static("", id="output")

    def key_up(self):
        menu = self.query_one(Menu)
        menu.selected = (menu.selected - 1) % len(OPTIONS)

    def key_down(self):
        menu = self.query_one(Menu)
        menu.selected = (menu.selected + 1) % len(OPTIONS)

    def key_enter(self):
        menu = self.query_one(Menu)
        self.run_command(OPTIONS[menu.selected][1])

    def run_command(self, cmd):
        output_widget = self.query_one("#output", Static)
        try:
            result = subprocess.check_output(cmd, shell=True, text=True)
        except Exception as e:
            result = f"执行出错: {e}"
        output_widget.update(Panel(result.strip(), title=f"命令输出：{cmd}"))

if __name__ == "__main__":
    MyApp().run()
